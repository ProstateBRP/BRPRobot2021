# - Config file for the HMS_Marker_Detection CLI
# It defines the following variables
#  ${MARKER_DETECTION_MODULE_NAME_UPPER}_EXECUTABLE   - the CLI executable
#  ${MARKER_DETECTION_CLI_DIR} - the CLI module directory, used to load the CLI as a Slicer CLI module
# Currently used by HMS_SlicerModule

# Don't use MODULE_NAME as it will over ride the module from which
# find_package is used.
set(MARKER_DETECTION_MODULE_NAME @MODULE_NAME@)
# TODO: get the configuration type rather than relying on the types
# having been reduced to just one configuration
set(MARKER_DETECTION_CLI_DIR @CMAKE_CURRENT_BINARY_DIR@/@Slicer_CLIMODULES_BIN_DIR@/@CMAKE_CONFIGURATION_TYPES@)
MESSAGE(STATUS "Config file:  MODULE_NAME = ${MODULE_NAME}")
MESSAGE(STATUS "Config file:  MARKER_DETECTION_MODULE_NAME = ${MARKER_DETECTION_MODULE_NAME}")
MESSAGE(STATUS "Config file: MARKER_DETECTION_CLI_DIR = ${MARKER_DETECTION_CLI_DIR}")
string(TOUPPER ${MARKER_DETECTION_MODULE_NAME} MARKER_DETECTION_MODULE_NAME_UPPER)


# Compute paths
get_filename_component(${MARKER_DETECTION_MODULE_NAME_UPPER}_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

# Our library dependencies (contains definitions for IMPORTED targets)
if(NOT TARGET ${MARKER_DETECTION_MODULE_NAME} AND NOT ${MARKER_DETECTION_MODULE_NAME}_BINARY_DIR)
  include("${${MARKER_DETECTION_MODULE_NAME_UPPER}_CMAKE_DIR}/${MARKER_DETECTION_MODULE_NAME}Targets.cmake")
endif()

# These are IMPORTED targets created by ${MARKER_DETECTION_MODULE_NAME}Targets.cmake

set(EXEC_EXT "")
if (WIN32)
  set(EXEC_EXT ".exe")
endif(WIN32)
  
set(${MARKER_DETECTION_MODULE_NAME_UPPER}_EXECUTABLE ${MARKER_DETECTION_CLI_DIR}/${MARKER_DETECTION_MODULE_NAME}${EXEC_EXT})
